#!/bin/bash

# Script para validar o Ingress Controller
# Uso: ./scripts/validate-ingress.sh [NAMESPACE] [SERVICE_NAME] [TIMEOUT]
# Exemplo: ./scripts/validate-ingress.sh ingress-nginx nginx-ingress-ingress-nginx-controller 300

set -e

# Par√¢metros via linha de comando com valores padr√£o
NAMESPACE=${1:-"ingress-nginx"}
SERVICE_NAME=${2:-"nginx-ingress-ingress-nginx-controller"}
TIMEOUT=${3:-300}

echo "üîç VALIDANDO INGRESS CONTROLLER"
echo "================================="
echo ""
echo "üìã Par√¢metros utilizados:"
echo "   Namespace: $NAMESPACE"
echo "   Servi√ßo: $SERVICE_NAME"
echo "   Timeout: ${TIMEOUT}s"
echo ""

echo "üìã Verificando namespace $NAMESPACE..."

# Verificar se o namespace existe
if ! kubectl get namespace $NAMESPACE >/dev/null 2>&1; then
    echo "‚ùå Namespace $NAMESPACE n√£o existe!"
    echo "   Execute: kubectl get namespaces"
    exit 1
fi

echo "‚úÖ Namespace $NAMESPACE existe"

echo ""
echo "üîç Verificando se o servi√ßo $SERVICE_NAME existe..."

# Verificar se o servi√ßo existe
if ! kubectl get service $SERVICE_NAME -n $NAMESPACE >/dev/null 2>&1; then
    echo "‚ùå Servi√ßo $SERVICE_NAME n√£o existe no namespace $NAMESPACE!"
    echo "   Verificando todos os servi√ßos no namespace:"
    kubectl get services -n $NAMESPACE
    exit 1
fi

echo "‚úÖ Servi√ßo $SERVICE_NAME existe"

echo ""
echo "üîç Verificando status do Load Balancer..."

# Verificar se o Load Balancer j√° tem um endere√ßo
LB_HOSTNAME=$(kubectl get svc $SERVICE_NAME -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].hostname}' 2>/dev/null || echo "")

if [ -n "$LB_HOSTNAME" ]; then
    echo "‚úÖ Load Balancer j√° est√° pronto!"
    echo "   Endere√ßo: $LB_HOSTNAME"
    echo ""
    echo "üåê Testando conectividade..."
    
    # Testar se o endere√ßo responde
    if curl -s --max-time 10 "http://$LB_HOSTNAME" >/dev/null 2>&1; then
        echo "‚úÖ Load Balancer est√° respondendo"
    else
        echo "‚ö†Ô∏è  Load Balancer n√£o est√° respondendo ainda (pode levar alguns minutos)"
    fi
else
    echo "‚è≥ Load Balancer ainda n√£o est√° pronto, aguardando..."
    
    # Aguardar o Load Balancer ficar pronto
    echo "   Aguardando at√© $TIMEOUT segundos..."
    if kubectl wait --for=condition=Ready service/$SERVICE_NAME -n $NAMESPACE --timeout=${TIMEOUT}s; then
        echo "‚úÖ Load Balancer ficou pronto!"
        
        # Obter o endere√ßo final
        LB_HOSTNAME=$(kubectl get svc $SERVICE_NAME -n $NAMESPACE -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
        echo "   Endere√ßo: $LB_HOSTNAME"
    else
        echo "‚ùå Timeout aguardando Load Balancer ficar pronto"
        echo "   Verificando status do servi√ßo:"
        kubectl describe service $SERVICE_NAME -n $NAMESPACE
        exit 1
    fi
fi

echo ""
echo "üîç Verificando pods do Ingress Controller..."

# Verificar se os pods est√£o rodando
PODS_READY=$(kubectl get pods -n $NAMESPACE -l app.kubernetes.io/name=ingress-nginx --no-headers | grep -c "Running" || echo "0")
TOTAL_PODS=$(kubectl get pods -n $NAMESPACE -l app.kubernetes.io/name=ingress-nginx --no-headers | wc -l || echo "0")

echo "   Pods rodando: $PODS_READY/$TOTAL_PODS"

if [ "$PODS_READY" -eq "$TOTAL_PODS" ] && [ "$TOTAL_PODS" -gt 0 ]; then
    echo "‚úÖ Todos os pods do Ingress Controller est√£o rodando"
else
    echo "‚ö†Ô∏è  Nem todos os pods est√£o rodando"
    kubectl get pods -n $NAMESPACE -l app.kubernetes.io/name=ingress-nginx
fi

echo ""
echo "üéâ VALIDA√á√ÉO CONCLU√çDA!"
echo "========================="
echo "üìù Resumo:"
echo "   ‚úÖ Namespace: $NAMESPACE"
echo "   ‚úÖ Servi√ßo: $SERVICE_NAME"
echo "   ‚úÖ Load Balancer: $LB_HOSTNAME"
echo "   ‚úÖ Pods: $PODS_READY/$TOTAL_PODS rodando"
echo ""
echo "üåê Para testar o ingress, use:"
echo "   curl -H 'Host: seu-dominio.com' http://$LB_HOSTNAME" 